(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(7),i=(n(0),n(91)),c={id:"declarative-mapping",title:"Declarative mapping",sidebar_label:"Declarative mapping",slug:"/declarative-mapping"},o={unversionedId:"declarative-mapping",id:"declarative-mapping",isDocsHomePage:!1,title:"Declarative mapping",description:"As described in the chart interface page each chart implementation must define a",source:"@site/docs/declarative-mapping.md",slug:"/declarative-mapping",permalink:"/rawgraphs-core/docs/declarative-mapping",editUrl:"https://github.com/rawgraphs/rawgraphs-core/edit/master/website/docs/declarative-mapping.md",version:"current",sidebar_label:"Declarative mapping",sidebar:"docs",previous:{title:"Chart utilities",permalink:"/rawgraphs-core/docs/chart-utilities"},next:{title:"Data parsing",permalink:"/rawgraphs-core/docs/data-parsing"}},p=[{value:"Simple column picking",id:"simple-column-picking",children:[]}],s={toc:p};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"As described in the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/rawgraphs-core/docs/chart-interface"}),"chart interface page")," each chart implementation must define a\n",Object(i.b)("inlineCode",{parentName:"p"},"mapData")," function that prepares the dataset for the rendering."),Object(i.b)("p",null,"Each chart might need a different shape of data, but it's possible to identify some common patterns for transforming data.\nFor this purpose, we're introducing a \"declarative mapping\" approach, in which the rawgraphs chart interface can implement the ",Object(i.b)("inlineCode",{parentName:"p"},"mapData"),'\nas a plain object describing the "role" of each dimension in the data transformation.'),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This API is still under definition and might change in the future versions."))),Object(i.b)("h2",{id:"simple-column-picking"},"Simple column picking"),Object(i.b)("p",null,'This form of declarative mapping implements the operation of "translating" column names\nfrom the user dataset to the dimensions described in the charts.'),Object(i.b)("p",null,"Let's suppose we have a dataset like:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"height, color, weight, specie\n10,red,10,A\n12,red,20,A\n12,violet,10,B\n14,violet,10,C\n10,red,10,A\n")),Object(i.b)("p",null,"and a chart exposing two dimensions:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const chart = {\n    ...\n    dimensions: [\n        { \n            id: 'x',\n            label: 'x',\n            required: 'true',\n        },\n        { \n            id: 'y',\n            label: 'y',\n            required: 'true',\n        },\n    ],\n    ...\n\n}\n")),Object(i.b)("p",null,'If we just want to "reduce" the dataset to a list of ',Object(i.b)("inlineCode",{parentName:"p"},"x")," and ",Object(i.b)("inlineCode",{parentName:"p"},"y")," based on column mappings,\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"mapData")," function could be written like"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const chart = {\n    ...\n    mapData: function (data, mapping, dataTypes, dimensions) {\n    return data.map((item) => ({\n      x: item[mapping.x.value],\n      y: item[mapping.y.value],\n    }));\n  },\n  ...\n}\n")),Object(i.b)("p",null,"Using the declarative mapping, we can just write:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const chart = {\n    ...\n    mapData: {\n        x: "get",\n        y: "get",\n    }\n  },\n  ...\n}\n')),Object(i.b)("p",null,"Which tells RAWGraphs to just pick the two columns mapped on x and y dimensions.\nNote that this implementation would also work for multi-valued dimensions, while the function shown above\nwould not work in this case."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You can see an example of this kind of mapping in the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/rawgraphs/rawgraphs-charts/blob/master/src/bubblechart/mapping.js"}),"core bubble chart"),"\nused in the RAWGraphs app."))))}l.isMDXComponent=!0},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),l=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=l(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(n),b=a,u=m["".concat(c,".").concat(b)]||m[b]||d[b]||i;return n?r.a.createElement(u,o(o({ref:t},s),{},{components:n})):r.a.createElement(u,o({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=b;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var s=2;s<i;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);